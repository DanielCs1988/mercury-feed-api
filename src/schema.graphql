# import User, Post, Comment, PostLike, CommentLike, Friendship, PostSubscriptionPayload, CommentSubscriptionPayload, PostLikeSubscriptionPayload, CommentLikeSubscriptionPayload, UserSubscriptionPayload, FriendshipSubscriptionPayload, PostOrderByInput, UserOrderByInput from "./generated/prisma.graphql"

type Query {
    feed(filter: String, skip: Int, first: Int, orderBy: PostOrderByInput): [Post!]!
    post(id: ID!): Post!
    comments(postId: ID!): [Comment!]!
    users(filter: String, skip: Int, first: Int, orderBy: UserOrderByInput): [User!]!
    currentUser: User!
}

type Mutation {
    createPost(text: String!, pictureUrl: String): Post
    updatePost(id: ID!, text: String, pictureUrl: String): Post
    deletePost(id: ID!): Post
    createComment(postId: ID!, text: String!): Comment
    updateComment(id: ID!, text: String!): Comment
    deleteComment(id: ID!): Comment
    likePost(postId: ID!): PostLike
    dislikePost(id: ID!): PostLike
    likeComment(commentId: ID!): CommentLike
    dislikeComment(id: ID!): CommentLike
    addFriend(targetId: ID!): Friendship
    acceptFriend(id: ID!): Friendship
    deleteFriend(id: ID!): Friendship
}

type Subscription {
    postSub: PostSubscriptionPayload
    postLikeSub: PostLikeSubscriptionPayload
    commentSub(postId: ID!): CommentSubscriptionPayload
    commentLikeSub(postId: ID!): CommentLikeSubscriptionPayload
    newUser: UserSubscriptionPayload
    friendshipSub: FriendshipSubscriptionPayload
}